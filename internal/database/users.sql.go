// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: users.sql

package database

import (
	"context"
	"database/sql"
)

const getUser = `-- name: GetUser :one
SELECT u.id, email, githubid, isadmin, acc.id, userid, status, tierid FROM users u LEFT JOIN accounts acc ON acc.userid = u.id WHERE u.id = $1
`

type GetUserRow struct {
	ID       int64
	Email    string
	Githubid sql.NullString
	Isadmin  sql.NullInt16
	ID_2     sql.NullInt64
	Userid   sql.NullInt64
	Status   sql.NullInt32
	Tierid   sql.NullInt32
}

func (q *Queries) GetUser(ctx context.Context, id int64) (GetUserRow, error) {
	row := q.db.QueryRowContext(ctx, getUser, id)
	var i GetUserRow
	err := row.Scan(
		&i.ID,
		&i.Email,
		&i.Githubid,
		&i.Isadmin,
		&i.ID_2,
		&i.Userid,
		&i.Status,
		&i.Tierid,
	)
	return i, err
}
